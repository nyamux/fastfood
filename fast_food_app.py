# -*- coding: utf-8 -*-
"""Fast food app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CdhJYwZl5T6_l1zM0N1ujVq_8JyThcTr
"""



import streamlit as st
import pandas as pd
import plotly.express as px
import folium
from streamlit_folium import folium_static
import numpy as np

# Set page config
st.set_page_config(
    page_title="US Fast Food Analysis",
    page_icon="üçî",
    layout="wide"
)

# Load and preprocess data
@st.cache_data
def load_data():
    df = pd.read_csv('fastfoodus.csv')
    # Clean categories column - split into list if it's a string
    df['categories'] = df['categories'].str.split(' and ')
    return df

# Main function
def main():
    st.title("üçî US Fast Food Restaurant Analysis")

    # Load data
    df = load_data()

    # Sidebar filters
    st.sidebar.header("Filters")

    # State selection
    states = sorted(df['province'].unique())
    selected_state = st.sidebar.multiselect(
        "Select State(s)",
        states,
        default=states[:5]
    )

    # Main content area with tabs
    tab1, tab2, tab3 = st.tabs(["üìç Location Density", "ü•§ Restaurant Categories", "üìä State Analysis"])

    # Tab 1: Location Density Map
    with tab1:
        st.header("Fast Food Restaurant Locations")

        # Create map
        m = folium.Map(location=[39.8283, -98.5795], zoom_start=4)

        # Filter data based on selected states
        filtered_df = df[df['province'].isin(selected_state)]

        # Add markers to map
        for idx, row in filtered_df.iterrows():
            folium.CircleMarker(
                location=[row['latitude'], row['longitude']],
                radius=5,
                popup=f"{row['name']} - {row['city']}, {row['province']}",
                color='red',
                fill=True
            ).add_to(m)

        # Display map
        folium_static(m)

        # Show density statistics
        st.subheader("Restaurant Density by State")
        density_df = filtered_df['province'].value_counts().reset_index()
        density_df.columns = ['State', 'Count']

        fig = px.bar(density_df, x='State', y='Count',
                    title='Number of Fast Food Restaurants by State')
        st.plotly_chart(fig)

    # Tab 2: Restaurant Categories
    with tab2:
        st.header("Restaurant Categories Analysis")

        # Explode categories and count
        categories_df = filtered_df.explode('categories')
        category_counts = categories_df['categories'].value_counts()

        # Create pie chart
        fig = px.pie(values=category_counts.values,
                    names=category_counts.index,
                    title='Distribution of Restaurant Categories')
        st.plotly_chart(fig)

        # Show top categories table
        st.subheader("Top Categories")
        st.dataframe(category_counts.head(10))

    # Tab 3: State Analysis
    with tab3:
        st.header("State-wise Analysis")

        # Select specific state for detailed analysis
        selected_state_analysis = st.selectbox(
            "Select a state for detailed analysis",
            selected_state
        )

        state_df = df[df['province'] == selected_state_analysis]

        # Show top cities
        st.subheader(f"Top Cities in {selected_state_analysis}")
        city_counts = state_df['city'].value_counts().head(10)
        fig = px.bar(x=city_counts.index, y=city_counts.values,
                    title=f'Top 10 Cities with Most Fast Food Restaurants in {selected_state_analysis}')
        st.plotly_chart(fig)

        # Show top restaurant chains
        st.subheader("Popular Restaurant Chains")
        chain_counts = state_df['name'].value_counts().head(10)
        fig = px.bar(x=chain_counts.index, y=chain_counts.values,
                    title='Top 10 Restaurant Chains')
        st.plotly_chart(fig)

if __name__ == "__main__":
    main()

streamlit run app.py